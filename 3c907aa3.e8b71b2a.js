(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{169:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return p})),r.d(n,"rightToc",(function(){return u})),r.d(n,"default",(function(){return i}));var t=r(2),o=r(9),a=(r(0),r(283)),c={id:"circular-dependency",title:"Circular Dependencies",sidebar_label:"Circular Dependencies"},p={id:"version-6.0.0/usages/avoids/circular-dependency",isDocsHomePage:!1,title:"Circular Dependencies",description:"Problem",source:"@site/versioned_docs/version-6.0.0/usages/avoids/circular-dependency.md",permalink:"/docs/usages/avoids/circular-dependency",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/versioned_docs/version-6.0.0/usages/avoids/circular-dependency.md",version:"6.0.0",sidebar_label:"Circular Dependencies",sidebar:"version-6.0.0/docs",previous:{title:"JavaScript Support",permalink:"/docs/usages/features/javascript-support"},next:{title:"NestJS Integration",permalink:"/docs/nest"}},u=[{value:"Problem",id:"problem",children:[]},{value:"TypeOrm Example",id:"typeorm-example",children:[]},{value:"Solution",id:"solution",children:[]}],s={rightToc:u};function i(e){var n=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},s,r,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"problem"},"Problem"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Circular Dependency")," occurs when you have two models that depend on each other. For example, ",Object(a.b)("inlineCode",{parentName:"p"},"SourceA")," depends on ",Object(a.b)("inlineCode",{parentName:"p"},"SourceB")," and ",Object(a.b)("inlineCode",{parentName:"p"},"SourceB")," also depends on ",Object(a.b)("inlineCode",{parentName:"p"},"SourceA"),".\nWhen designing your data models, both Domain and DTO (or View Model), you will probably run into circular dependency."),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"class SourceA {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceB)\n  sourceB: SourceB;\n}\n\nclass SourceB {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceA)\n  sourceA: SourceA;\n}\n")),Object(a.b)("h3",{id:"typeorm-example"},"TypeOrm Example"),Object(a.b)("p",null,"This is very common when you setup your Entities using ",Object(a.b)("inlineCode",{parentName:"p"},"TypeOrm"),". Suppose you have two Entities: Order and Person"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"@Entity()\nexport class Order {\n  @AutoMap()\n  id: number;\n  // ... shorten for brevity purpose\n  @ManyToOne(() => Person, person => person.orders)\n  @AutoMap(() => Person)\n  person: Person;\n}\n\n@Entity()\nexport class Person {\n  @AutoMap()\n  id: number;\n  // ... shorten for brevity purpose\n  @OneToMany(() => Order, order => order.person)\n  @AutoMap(() => Order)\n  orders: Order[];\n}\n")),Object(a.b)("p",null,"Here, you have introduced a ",Object(a.b)("strong",{parentName:"p"},"Circular Dependency")," with Order and Person."),Object(a.b)("h3",{id:"solution"},"Solution"),Object(a.b)("p",null,"In general, you should avoid introducing ",Object(a.b)("strong",{parentName:"p"},"Circular Dependency")," as much as possible. However, there are cases that you must have ",Object(a.b)("strong",{parentName:"p"},"Circular Dependency"),".\nFor those cases, ",Object(a.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," has a concept of ",Object(a.b)("strong",{parentName:"p"},"depth")," of nesting models."),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"class SourceA {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceB)\n  sourceB: SourceB;\n}\n\nclass SourceB {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceA)\n  sourceA: SourceA;\n}\n")),Object(a.b)("p",null,"Let's assume the above models, this is how ",Object(a.b)("strong",{parentName:"p"},"depth")," works:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Depth of 0")),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"SourceA {\n    sourceB: SourceB {\n        sourceA: null\n    }\n}\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Depth of 1")),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"SourceA {\n    sourceB: SourceB {\n        sourceA: SourceA {\n            sourceB: null;\n        }\n    }\n}\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Depth of 2")),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"SourceA {\n    sourceB: SourceB {\n        sourceA: SourceA {\n            sourceB: {\n                sourceA: SourceA {\n                    sourceB: null;\n                }\n            }\n        }\n    }\n}\n")),Object(a.b)("p",null,"and so on. By default, ",Object(a.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," will apply ",Object(a.b)("strong",{parentName:"p"},"depth of 0")," to nested models. To specify ",Object(a.b)("strong",{parentName:"p"},"depth"),", use ",Object(a.b)("inlineCode",{parentName:"p"},"@AutoMap()")," decorator 2nd argument:"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"class SourceA {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceB, 1)\n  sourceB: SourceB;\n}\n\nclass SourceB {\n  @AutoMap()\n  id: number;\n  @AutoMap(() => SourceA, 1)\n  sourceA: SourceA;\n}\n")),Object(a.b)("p",null,"Please be advised that the bigger the ",Object(a.b)("strong",{parentName:"p"},"depth")," is, the bigger your model is so you need to be very cautious when you start introducing ",Object(a.b)("strong",{parentName:"p"},"Circular Dependency"),"."),Object(a.b)("p",null,"Another possible solution is to ",Object(a.b)("strong",{parentName:"p"},"NOT")," decorate the circular-dependent member with ",Object(a.b)("inlineCode",{parentName:"p"},"@AutoMap()")," and configure the mapping for this member manually with ",Object(a.b)("inlineCode",{parentName:"p"},"mapWith()")),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-typescript"}),"@Entity()\nexport class Order {\n  @AutoMap()\n  id: number;\n  // ... shorten for brevity purpose\n  @ManyToOne(() => Person, person => person.orders)\n  person: Person;\n}\n\n@Entity()\nexport class Person {\n  @AutoMap()\n  id: number;\n  // ... shorten for brevity purpose\n  @OneToMany(() => Order, order => order.person)\n  orders: Order[];\n}\n\nMapper.createMap(SomeOrderDto, Order)\n    .forMember(d => d.person, mapWith(Person, s => s.person, () => SomePersonDto);\nMapper.createMap(SomePersonDto, Person)\n    .forMember(d => d.orders, mapWith(Order, s => s.orders, () => SomeOrderDto);\n")))}i.isMDXComponent=!0},283:function(e,n,r){"use strict";r.d(n,"a",(function(){return l})),r.d(n,"b",(function(){return m}));var t=r(0),o=r.n(t);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),i=function(e){var n=o.a.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},l=function(e){var n=i(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=i(r),d=t,m=l["".concat(c,".").concat(d)]||l[d]||b[d]||a;return r?o.a.createElement(m,p(p({ref:n},s),{},{components:r})):o.a.createElement(m,p({ref:n},s))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=r.length,c=new Array(a);c[0]=d;var p={};for(var u in n)hasOwnProperty.call(n,u)&&(p[u]=n[u]);p.originalType=e,p.mdxType="string"==typeof e?e:t,c[1]=p;for(var s=2;s<a;s++)c[s]=r[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);