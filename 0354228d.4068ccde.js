(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{138:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return l}));var n=a(2),r=a(9),c=(a(0),a(283)),i={id:"getting-started",title:"Getting started",sidebar_label:"Getting started"},s={id:"version-5.0.12/guides/getting-started",isDocsHomePage:!1,title:"Getting started",description:"travis",source:"@site/versioned_docs/version-5.0.12/guides/getting-started.md",permalink:"/docs/5.0.12/guides/getting-started",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/versioned_docs/version-5.0.12/guides/getting-started.md",version:"5.0.12",sidebar_label:"Getting started",sidebar:"version-5.0.12/docs",previous:{title:"Problems with TypeScript",permalink:"/docs/5.0.12/introduction/problems-with-typescript"},next:{title:"Basic concepts",permalink:"/docs/5.0.12/guides/basic-concept"},latestVersionMainDocPermalink:"/docs/introduction/why"},p=[{value:"Lodash Note",id:"lodash-note",children:[]},{value:"Support",id:"support",children:[]},{value:"Example",id:"example",children:[]}],b={rightToc:p};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/travis/nartc/mapper",alt:"travis"})),"\n",Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/bundlephobia/minzip/@nartc/automapper",alt:"bundlephobia"})),"\n",Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/npm/dt/@nartc/automapper",alt:"downloads"})),"\n",Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/npm/v/@nartc/automapper",alt:"npm"})),"\n",Object(c.b)("img",Object(n.a)({parentName:"p"},{src:"https://badgen.net/github/license/nartc/mapper",alt:"license"})),"\n",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://coveralls.io/github/nartc/mapper?branch=master"}),Object(c.b)("img",Object(n.a)({parentName:"a"},{src:"https://coveralls.io/repos/github/nartc/mapper/badge.svg?branch=master",alt:"Coverage Status"})))," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://greenkeeper.io/"}),Object(c.b)("img",Object(n.a)({parentName:"a"},{src:"https://badges.greenkeeper.io/nartc/mapper.svg",alt:"Greenkeeper badge"})))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"NPM")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm install @nartc/automapper\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm i @nartc/automapper\n")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Yarn:")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @nartc/automapper\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," utilizes ",Object(c.b)("inlineCode",{parentName:"p"},"reflect-metadata")," for the ",Object(c.b)("strong",{parentName:"p"},"Reflection")," capabilities as a ",Object(c.b)("inlineCode",{parentName:"p"},"peerDependency")," so you will also need to install ",Object(c.b)("inlineCode",{parentName:"p"},"reflect-metadata")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm i reflect-metadata\n")),Object(c.b)("p",null,"In ",Object(c.b)("inlineCode",{parentName:"p"},"tsconfig.json"),", you need to make sure to turn on ",Object(c.b)("inlineCode",{parentName:"p"},"emitDecoratorMetadata")," and ",Object(c.b)("inlineCode",{parentName:"p"},"experimentalDecorators")," flags as ",Object(c.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," makes use of ",Object(c.b)("strong",{parentName:"p"},"Decorators"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'// sample tsconfig.json\n\n{\n  "compilerOptions": {\n    "emitDecoratorMetadata": true,\n    "experimentalDecorators": true\n  }\n}\n')),Object(c.b)("h3",{id:"lodash-note"},"Lodash Note"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," uses ",Object(c.b)("inlineCode",{parentName:"p"},"lodash.set")," from ",Object(c.b)("inlineCode",{parentName:"p"},"lodash"),". Since ",Object(c.b)("inlineCode",{parentName:"p"},"set")," is the only method that ",Object(c.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," needs from ",Object(c.b)("inlineCode",{parentName:"p"},"lodash"),", I only have ",Object(c.b)("inlineCode",{parentName:"p"},"lodash.set")," installed as a single-method library to minimize the bundle size as much as possible.\n",Object(c.b)("inlineCode",{parentName:"p"},"lodash.set")," is a ",Object(c.b)("inlineCode",{parentName:"p"},"dependency")," so it will be installed automatically with ",Object(c.b)("inlineCode",{parentName:"p"},"@nartc/automapper"),"."),Object(c.b)("h3",{id:"support"},"Support"),Object(c.b)("ul",{className:"contains-task-list"},Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Basic Mapping between two classes"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Basic Mapping for nested classes"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Mapping Inheritance - with caveats regarding typings."),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Array/List Mapping"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Flattening"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","ReverseMap"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Value Converters"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Value Resolvers"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Async"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Before/After Callback"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Naming Conventions"),Object(c.b)("li",Object(n.a)({parentName:"ul"},{className:"task-list-item"}),Object(c.b)("input",Object(n.a)({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Null Substitution - ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/lqmanh"}),"@lqmanh")," pointed out the difference in ",Object(c.b)("inlineCode",{parentName:"li"},"fromValue()")," and ",Object(c.b)("inlineCode",{parentName:"li"},"nullSubstitution()")," use-case, and that difference is totally valid. Hence, ",Object(c.b)("inlineCode",{parentName:"li"},"nullSubstitution")," is now supported.")),Object(c.b)("h3",{id:"example"},"Example"),Object(c.b)("p",null,"Now you can start decorating your class's properties with ",Object(c.b)("inlineCode",{parentName:"p"},"AutoMap")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"class User {\n  @AutoMap()\n  firstName: string;\n  @AutoMap()\n  lastName: string;\n  @AutoMap()\n  age: number;\n  @AutoMap()\n  bio: string;\n}\n\nclass UserVm {\n  @AutoMap()\n  firstName: string;\n  @AutoMap()\n  lastName: string;\n  @AutoMap()\n  age: number;\n  @AutoMap()\n  bio: string;\n}\n\nMapper.createMap(User, UserVm);\n\n// A User instance. Can also be fetched from the database\nconst user = new User();\nuser.firstName = 'Chau';\nuser.lastName = 'Tran';\nuser.age = 28;\nuser.bio = 'Developer';\n\n/**\n * User { firstName: 'Chau', lastName: 'Tran', age: 28, bio: 'Developer' }\n */\n\nconst vm = Mapper.map(user, UserVm);\n/**\n * UserVm { firstName: 'Chau', lastName: 'Tran', age: 28, bio: 'Developer' }\n */\n\n// Pseudo code to get a list of Users\nconst users = this.db.User.findAll();\nconst vms = Mapper.mapArray(users, UserVm);\n/**\n * [UserVm, UserVm, UserVm ...]\n */\n")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"More complex mapping examples will be addressed in later sections. And you probably already notice the verbose issue with ",Object(c.b)("inlineCode",{parentName:"p"},"@AutoMap()"),", check out the ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/5.0.12/plugin"}),"Plugin")," section to learn how to address this. Throughout the documentations, I will keep the ",Object(c.b)("inlineCode",{parentName:"p"},"@AutoMap()")," decorator in the sample snippets to make the documentations clear.")))}l.isMDXComponent=!0},283:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),o=l(a),u=n,d=o["".concat(i,".").concat(u)]||o[u]||m[u]||c;return a?r.a.createElement(d,s(s({ref:t},b),{},{components:a})):r.a.createElement(d,s({ref:t},b))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var b=2;b<c;b++)i[b]=a[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);